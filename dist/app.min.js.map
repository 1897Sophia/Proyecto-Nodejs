{"version":3,"sources":["app.js"],"names":["express","require","path","logger","config","indexRouter","mongoose","app","set","join","__dirname","usersRouter","use","json","extended","cookieParser","uri","concat","process","env","USER","PASSWORD","DBNAME","then","console","log","connect","e","req","res","next","createError","err","message","locals","get","status","render","PORT","port","listen"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,KAAOD,QAAQ,QADfD,aAAiBC,QAAC,iBAGlBE,OAASF,QAAQ,UAFjBC,SAAOD,QAAO,YAIpBA,QAAQ,UAAUG,SAElB,IAAMC,YAAcJ,QAAQ,kBAJtBE,YAAgBF,QAAC,kBACjBK,IAAQN,UASdO,IAAIC,IAAI,QAASN,KAAKO,KAAKC,UAAW,UANtCH,IAAMF,IAAAA,cAAcJ,OACpBM,IAAMI,IAAAA,OAAW,QASjBJ,IAAIK,IAAIZ,QAAQa,QAPhBN,IAAMA,IAAGP,QAAGA,WAEZ,CAAAc,UAAA,KAOAP,IAAIK,IAAIG,gBANRR,IAAIC,IAAIR,QAAR,OAAsBS,KAAKC,KAAAA,UAAW,YAGtCH,IAAIK,IAAIT,IAAAA,aACRI,IAAIK,IAAIZ,SAAQa,aACW,IAA3BG,IAAA,iBAAAC,OAAAC,QAAAC,IAAAC,KAAA,KAAAH,OAAAC,QAAAC,IAAAE,SAAA,kCAAAJ,OAAAC,QAAAC,IAAAG,OAAA,gCAEAf,SAAQP,QAAOgB,IAAA,CAEfT,iBAAaF,EACbE,oBAAkBI,IAGlBY,KAAS,WAAA,OAAAC,QAAAC,IAAA,6BANTlB,MAQSmB,SAAAA,GAAAA,OAAAA,QAAaD,IAAAE,KAAApB,IAInBgB,IAAK,SAAAK,EAAAC,EAAAC,GAAAA,EAAAC,YAAcN,QAStBlB,IAAIK,IAAI,SAASoB,EAAKJ,EAAKC,EAAKC,GALhCvB,EAAIK,OAAIqB,QAAcJ,EAAdI,QACNH,EAAII,OAACH,MAAL,gBAAiBH,EAAjBrB,IAAA4B,IAAA,OAAAH,EAAA,GADFH,EAIAO,OAAAJ,EAAAI,QAAA,KAKEP,EAAIQ,OAAO,WADXR,IAAIO,KAAOJ,QAAII,IAAJE,MAAX,IACAT,IAAAA,OAAIQ,KAAO,WAJbb,QAOAC,IAPA,+BAAAR,OAOAsB,SAEAhC,OAAIiC,QAAajC","file":"app.min.js","sourcesContent":["const express = require('express');\nconst path = require('path');\nconst cookieParser = require('cookie-parser');\nconst logger = require('morgan');\nconst mongoose = require('mongoose');\nrequire('dotenv').config();\n\nconst indexRouter = require('./routes/index');\nconst usersRouter = require('./routes/users');\n\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\napp.use(logger('dev'));\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', indexRouter);\napp.use('/users', usersRouter);\n\n// MongoDB connection\nconst uri = `mongodb+srv://${process.env.USER}:${process.env.PASSWORD}@cluster0.3hbs38c.mongodb.net/${process.env.DBNAME}?retryWrites=true&w=majority`;\n\nmongoose.connect(uri, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n})\n  .then(() => console.log(\"Base de datos conectada\"))\n  .catch(e => console.log(e));\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  next(createError(404));\n});\n\n// error handler\napp.use(function(err, req, res, next) {\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n  res.status(err.status || 500);\n  res.render('error');\n});\n\n// Start the server\nconst port = process.env.PORT || 3000;\napp.listen(port, () => {\n  console.log(`Servidor iniciado en puerto ${port}`);\n});\n\nmodule.exports = app;\n"]}